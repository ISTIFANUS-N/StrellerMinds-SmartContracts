name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    name: Build and Release WASM Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        with:
          fetch-depth: 0

      - name: Install Rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target

      - name: Install wasm_opt (Binaryen)
        run: |
          sudo apt-get update
          sudo apt-get install -y binaryen

      - name: Build contracts
        run: |
          chmod +x scripts/build.sh
          ./scripts/build.sh

      - name: Prepare artifacts
        shell: bash
        run: |
          set -euo pipefail
          TAG="${GITHUB_REF_NAME}"
          mkdir -p dist
          shopt -s nullglob
          for wasm in target/wasm32-unknown-unknown/release/*.wasm; do
            base="$(basename "$wasm")"
            name="${base%.wasm}"
          if compgen -G "dist/*" > /dev/null; then
            if command -v sha256sum >/dev/null 2>&1; then
              sha256sum dist/* > dist/SHA256SUMS.txt
            else
              shasum -a 256 dist/* > dist/SHA256SUMS.txt
            fi
          fi

      - name: Upload CI Artifacts (structured)
        uses: actions/upload-artifact@v4
        with:
          name: wasm-artifacts-${{ github.ref_name }}
          path: |
            artifacts/**
            dist/**
          if-no-files-found: error

      - name: Generate changelog
        id: changelog
        shell: bash
        run: |
          set -euo pipefail
          TAG="${GITHUB_REF_NAME}"
          if [ -f .git-cliff.toml ]; then
            if ! command -v git-cliff >/dev/null 2>&1; then
              cargo install git-cliff --locked
            fi
            BODY=$(git-cliff --tag "$TAG" --config .git-cliff.toml)
          else
            Refer to the attached assets under artifacts/<crate>/<version>/ and dist/.
            EOF
            )
          fi
          echo "body<<EOF" >> "$GITHUB_OUTPUT"
          echo "$BODY" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.body }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
          files: |
            dist/*
            artifacts/**

      - name: Set up Cosign
        if: ${{ secrets.COSIGN_PRIVATE_KEY != '' }}
        uses: sigstore/cosign-installer@v3.7.0

      - name: Sign artifacts with Cosign
        if: ${{ secrets.COSIGN_PRIVATE_KEY != '' }}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          set -euo pipefail
          for f in $(find dist artifacts -type f ! -name "*.txt"); do
            cosign sign-blob --key cosign.key "$f" --output-signature "$f.sig"
          done
          rm -f cosign.key
